{"version":3,"sources":["redux/store.ts","redux/index.ts","redux/types.ts","redux/actions.ts","components/InitScreen/InitScreen.tsx","components/InitScreen/useInit.ts","components/Login/LoginForm.tsx","components/Login/SignupForm.tsx","components/Login/Auth.tsx","components/LogoutButton.tsx","reusables/Header.tsx","reusables/utils/index.ts","components/NoticeDashboard/AddNotice/AddNotice.tsx","components/NoticeDashboard/NoticeDashboard.tsx","components/PastNotices/PastNotices.tsx","components/GlobalListerner.tsx","reusables/hooks/useDidUpdate.ts","Routes.tsx","reusables/contants/index.ts","App.tsx","serviceWorker.ts","index.tsx","images/background.png"],"names":["initialState","teacher","rootReducer","combineReducers","rootStore","state","action","type","payload","store","createStore","applyMiddleware","thunk","setTeacher","antIcon","LoadingOutlined","style","fontSize","spin","InitScreen","history","useHistory","dispatch","useDispatch","useEffect","token","localStorage","getItem","jwt_decode","axios","defaults","headers","common","push","height","align","justify","indicator","useInit","LoginForm","form","onFinish","loading","labelAlign","name","initialValues","remember","Item","rules","required","message","placeholder","prefix","MailOutlined","Password","KeyOutlined","htmlType","SignuForm","Select","Option","span","marginLeft","hasFeedback","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","Title","Typography","Text","Auth","Form","useForm","useState","setLoading","flag","setFlag","addTeacher","formValues","a","postData","tags","role","post","data","alert","resetFields","response","status","backgroundImage","Background","level","marginTop","position","top","color","backgroundColor","padding","paddingTop","borderRadius","marginBottom","ghost","icon","LoginOutlined","onClick","marginRight","UserOutlined","qs","stringify","loginType","access_token","setItem","replace","console","log","LogoutButton","his","danger","removeItem","styles","header","borderBottom","link","Header","colors","location","pathname","reverse","color1","color2","margin","getFromdata","formData","FormData","Object","entries","map","item","append","formItemLayout","labelCol","wrapperCol","AddNotice","useSelector","allTags","file","setFile","formRef","React","createRef","resetForm","current","uploadNotice","itemIdx","JSON","_id","teacherId","fName","lName","ref","flexDirection","display","justifyContent","label","TextArea","rows","onChange","e","target","files","mode","size","showArrow","filterOption","option","children","includes","idx","key","tagName","verboseName","Group","defaultValue","Button","NoticeDashboard","paddingLeft","paddingRight","table","border","PastNotices","listData","setListData","get","res","handleDelete","id","noticeId","columns","title","dataIndex","render","date","Moment","format","tag","text","record","onConfirm","DeleteOutlined","alignItems","pagination","pageSize","dataSource","GlobalListener","withRouter","func","deps","didUpdate","didMount","useRef","useDidUpdate","baseURL","Routes","basename","exact","path","interceptors","use","err","App","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.ac0755b6.chunk.js","sourcesContent":["import { AppActionsType, ReduxState, SET_TEACHER, RESET } from './types';\n\nconst initialState: ReduxState = {\n  teacher: null,\n};\n\nexport default (state = initialState, action: AppActionsType): ReduxState => {\n  switch (action.type) {\n    case SET_TEACHER:\n      return { ...state, teacher: action.payload };\n\n    case RESET:\n      return { ...initialState, teacher: initialState.teacher };\n\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootStore from './store';\n\nconst rootReducer = combineReducers({\n  rootStore,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import { AppState } from '.';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\n\nexport const SET_TEACHER = 'SET_TEACHER';\nexport const RESET = 'RESET';\n\nexport interface PermTagType {\n  tagName: string;\n  verboseName: string;\n}\n\nexport interface TeacherType {\n  exp: number;\n  iat: number;\n  tags: TagsType;\n  branch: string;\n  email: string;\n  fName: string;\n  joinYear: string | number;\n  lName: string;\n  regId: string;\n  role: 'teacher' | 'admin';\n  teacherId: string;\n}\n\nexport type TagsType = PermTagType[] | null;\n\nexport interface ReduxState {\n  teacher: TeacherType | null;\n}\n\nexport interface SetTeacherActionType {\n  type: typeof SET_TEACHER;\n  payload: TeacherType;\n}\n\nexport interface ResetActionType {\n  type: typeof RESET;\n}\n\nexport type AppActionsType = SetTeacherActionType | ResetActionType;\n\nexport type MyThunkAction<R, T = any> = ThunkAction<\n  R,\n  AppState,\n  T,\n  AppActionsType\n>;\nexport type MyThunkDispatch<T = any> = ThunkDispatch<\n  AppState,\n  T,\n  AppActionsType\n>;\n","import { TeacherType, SetTeacherActionType, SET_TEACHER } from './types';\n\nexport const setTeacher = (payload: TeacherType): SetTeacherActionType => ({\n  type: SET_TEACHER,\n  payload,\n});\n","import React, { useEffect } from 'react';\nimport { Spin, Row } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { TeacherType } from '../../redux/types';\nimport { useDispatch } from 'react-redux';\nimport { setTeacher } from '../../redux/actions';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: '10vh' }} spin />;\n\nconst InitScreen = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const token = localStorage.getItem('teacher-token');\n    if (token) {\n      const teacher: TeacherType = jwt_decode(token);\n\n      dispatch(setTeacher(teacher));\n\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token || ''}`;\n      history.push('/add-notice');\n    } else {\n      history.push('auth');\n    }\n  }, []);\n\n  return (\n    <Row style={{ height: '100vh' }} align=\"middle\" justify=\"center\">\n      <Spin indicator={antIcon} />\n    </Row>\n  );\n};\n\nexport default InitScreen;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TeacherType } from '../../redux/types';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios';\nimport { setTeacher } from '../../redux/actions';\n\nconst useInit = () => {\n  const dispatch = useDispatch();\n  const token = localStorage.getItem('teacher-token');\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token || ''}`;\n\n  useEffect(() => {\n    if (token) {\n      const teacher: TeacherType = jwt_decode(token);\n      dispatch(setTeacher(teacher));\n    }\n  }, []);\n};\n\nexport default useInit;\n","import { Button, Form, Input, Row } from 'antd';\nimport React from 'react';\nimport { MailOutlined, KeyOutlined } from '@ant-design/icons';\n\nconst LoginForm = ({ form, onFinish, loading }) => {\n  return (\n    <Form\n      labelAlign=\"left\"\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      form={form}\n      onFinish={onFinish}\n    >\n      <Form.Item\n        name=\"email\"\n        rules={[{ required: true, message: 'Please input your email!' }]}\n      >\n        <Input\n          placeholder=\"Enter your email address\"\n          prefix={<MailOutlined />}\n        />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password\n          placeholder=\"Enter your password\"\n          prefix={<KeyOutlined />}\n        />\n      </Form.Item>\n\n      <Row justify=\"start\">\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Row>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import { Col, Form, Input, Row, Select, Button } from 'antd';\nimport React from 'react';\n\nconst { Option } = Select;\n\nconst SignuForm = ({ form, onFinish, loading }) => {\n  return (\n    <Form\n      labelAlign=\"left\"\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      form={form}\n      onFinish={onFinish}\n    >\n      <Row>\n        <Col span={11}>\n          <Form.Item\n            name=\"fName\"\n            rules={[{ required: true, message: 'This field is mandatary!' }]}\n          >\n            <Input placeholder=\"First Name\" />\n          </Form.Item>\n        </Col>\n        <Col span={13}>\n          <Form.Item\n            name=\"lName\"\n            rules={[{ required: true, message: 'This field is mandatary!' }]}\n            style={{ marginLeft: 20 }}\n          >\n            <Input placeholder=\"Last Name\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={11}>\n          <Form.Item\n            name=\"regId\"\n            rules={[{ required: true, message: 'This field is mandatary!' }]}\n          >\n            <Input placeholder=\"Registration ID\" />\n          </Form.Item>\n        </Col>\n        <Col span={13}>\n          <Form.Item\n            name=\"email\"\n            rules={[{ required: true, message: 'This field is mandatary!' }]}\n            style={{ marginLeft: 20 }}\n          >\n            <Input placeholder=\"Email ID\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row justify=\"space-between\">\n        <Col span={11}>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n            hasFeedback\n          >\n            <Input.Password placeholder=\"Enter password\" />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            name=\"confirm\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    'The two passwords that you entered do not match!',\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input.Password placeholder=\"Verify password\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row justify=\"start\">\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Row>\n    </Form>\n  );\n};\n\nexport default SignuForm;\n","import { LoginOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Col, Form, Row, Typography } from 'antd';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport qs from 'query-string';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Background from '../../images/background.png';\nimport { setTeacher } from '../../redux/actions';\nimport { MyThunkDispatch, TeacherType } from '../../redux/types';\nimport LoginForm from './LoginForm';\nimport SignuForm from './SignupForm';\n\nconst { Title, Text } = Typography;\n\nconst Auth = () => {\n  const [form] = Form.useForm();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch<MyThunkDispatch>();\n\n  const [flag, setFlag] = useState(false);\n\n  const onFinish = data => {\n    setLoading(true);\n    (async () => {\n      try {\n        const response = await axios.post<{ access_token: string }>(\n          'auth/login',\n          qs.stringify({ ...data, loginType: 'teacher' }),\n          {\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          },\n        );\n\n        const token = response.data.access_token;\n\n        localStorage.setItem('teacher-token', token);\n\n        const teacher: TeacherType = jwt_decode(token);\n\n        dispatch(setTeacher(teacher));\n\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        history.replace('/add-notice');\n      } catch (err) {\n        console.log(err?.response);\n        setLoading(false);\n        alert(err?.response?.data);\n      }\n    })();\n  };\n\n  const addTeacher = async formValues => {\n    setLoading(true);\n    const postData = {\n      ...formValues,\n      tags: [],\n      role: 'teacher',\n    };\n\n    try {\n      const response = await axios.post('auth/signupTeacher', postData);\n\n      if (response.data) {\n        alert('Activation Link sent your mail');\n        form.resetFields();\n        setFlag(false);\n      }\n    } catch (err) {\n      if (err.response?.status === 401) {\n        alert(err.response?.data);\n      } else {\n        alert('Error occured');\n      }\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Row\n      justify=\"center\"\n      align=\"middle\"\n      style={{\n        height: '100vh',\n        backgroundImage: `url(${Background})`,\n      }}\n    >\n      <Title\n        level={4}\n        style={{\n          marginTop: '20px',\n          position: 'absolute',\n          top: 0,\n          color: '#fff',\n        }}\n      >\n        PICT EAN{' '}\n        <Text\n          style={{\n            fontSize: '12px',\n            color: '#f8f8f8',\n          }}\n        >\n          Teacher Dashboard\n        </Text>\n      </Title>\n      <Col\n        span={8}\n        style={{\n          backgroundColor: '#fff',\n          padding: '0px 32px',\n          paddingTop: '12px',\n          borderRadius: '16px',\n        }}\n      >\n        <Row style={{ marginBottom: 32, marginTop: 8 }}>\n          <Button\n            type={!flag ? 'primary' : 'default'}\n            ghost={!flag}\n            icon={<LoginOutlined />}\n            onClick={() => setFlag(false)}\n            style={{ borderRadius: 4, marginRight: 16 }}\n          >\n            Login\n          </Button>\n          <Button\n            ghost={flag}\n            type={flag ? 'primary' : 'default'}\n            icon={<UserOutlined />}\n            onClick={() => setFlag(true)}\n            style={{ borderRadius: 4 }}\n          >\n            Register\n          </Button>\n        </Row>\n\n        {!flag ? (\n          <LoginForm form={form} onFinish={onFinish} loading={loading} />\n        ) : (\n          <SignuForm form={form} onFinish={addTeacher} loading={loading} />\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\nimport { Button } from 'antd';\nimport { useHistory } from 'react-router-dom';\n\nconst LogoutButton = () => {\n  const his = useHistory();\n\n  return (\n    <Button\n      danger\n      onClick={() => {\n        localStorage.removeItem('teacher-token');\n        his.push('/auth');\n      }}\n      style={{ marginRight: 24, marginLeft: 24 }}\n    >\n      Logout\n    </Button>\n  );\n};\n\nexport default LogoutButton;\n","import { Button, Row, Typography } from 'antd';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport LogoutButton from '../components/LogoutButton';\n\nconst { Title } = Typography;\n\nconst Header = () => {\n  const history = useHistory();\n  const teacherActivated = history.location.pathname === '/add-notice';\n  const colors = ['#416ce1', '#000'];\n  const [color1, color2] = teacherActivated ? colors : colors.reverse();\n\n  return (\n    <Row style={styles.header} align=\"middle\">\n      <Title style={{ margin: 0, color: '#404a57' }} level={2}>\n        Teacher Dashboard\n      </Title>\n      <Button\n        type=\"link\"\n        style={{ ...styles.link, color: color1 }}\n        onClick={() => history.replace('add-notice')}\n      >\n        Add Notice\n      </Button>\n      <Button\n        type=\"link\"\n        style={{\n          ...styles.link,\n          color: color2,\n          marginRight: 'auto',\n          marginLeft: 0,\n        }}\n        onClick={() => history.replace('notices')}\n      >\n        Past Notices\n      </Button>\n      <LogoutButton />\n    </Row>\n  );\n};\n\ninterface StylesTypes {\n  [key: string]: React.CSSProperties;\n}\n\nconst styles: StylesTypes = {\n  header: {\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    borderBottom: '1px solid #ddd',\n    padding: '20px 30px',\n  },\n\n  link: {\n    fontSize: 18,\n    marginRight: 24,\n    marginLeft: 24,\n  },\n};\n\nexport default Header;\n","export const getFromdata = data => {\n  const formData = new FormData();\n\n  Object.entries(data).map(item => {\n    formData.append(item[0], item[1] as Blob | string);\n  });\n\n  return formData;\n};\n","import { Button, Col, Form, Input, Radio, Select } from 'antd';\nimport { FormInstance } from 'antd/lib/form';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { AppState } from '../../../redux';\nimport { getFromdata } from '../../../reusables/utils';\nimport { InputEventType } from '../../../types';\n\nconst { Option } = Select;\n\nconst AddNotice = () => {\n  const history = useHistory();\n\n  const { allTags, teacher } = useSelector(({ rootStore }: AppState) => ({\n    allTags: rootStore.teacher?.tags,\n    teacher: rootStore.teacher,\n  }));\n  const [file, setFile] = useState<File | null>();\n  const formRef = React.createRef<FormInstance>();\n\n  const resetForm = () => {\n    formRef.current?.resetFields();\n    setFile(null);\n  };\n\n  const uploadNotice = async data => {\n    // Extract Tag objects from form tags\n    const tags = data.tags.map(itemIdx => allTags?.[itemIdx]);\n\n    // Override file field beacause returns only path in Antd\n\n    const formValues = {\n      ...data,\n      tags: JSON.stringify(tags),\n      teacher: JSON.stringify({\n        _id: teacher?.teacherId,\n        name: `${teacher?.fName} ${teacher?.lName}`,\n      }),\n      file,\n    };\n\n    try {\n      const response = await axios.post(\n        'notice/addnotices',\n        getFromdata({\n          ...formValues,\n        }),\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        },\n      );\n\n      if (response.data) {\n        resetForm();\n        alert('Notice Uploaded');\n        history.push('notices');\n      } else {\n        resetForm();\n      }\n    } catch (err) {\n      resetForm();\n    }\n  };\n\n  const handleFileChange: InputEventType = e => {\n    setFile(e.target.files?.[0] || null);\n  };\n\n  return (\n    <Col\n      span={24}\n      style={{\n        backgroundColor: '#fff',\n      }}\n    >\n      <Form\n        labelAlign=\"left\"\n        ref={formRef}\n        style={{\n          flexDirection: 'row',\n          display: 'flex',\n          justifyContent: 'space-around',\n          padding: '32px',\n        }}\n        name=\"basic\"\n        initialValues={{ type: 'notice' }}\n        onFinish={uploadNotice}\n      >\n        <Col span={12}>\n          <Form.Item\n            {...formItemLayout}\n            labelAlign=\"left\"\n            name=\"title\"\n            label=\"Title\"\n            rules={[{ required: true, message: 'Please add Title!' }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Body\" name=\"body\" {...formItemLayout}>\n            <Input.TextArea rows={15} />\n          </Form.Item>\n          <Form.Item label=\"Attachment\" name=\"file\" {...formItemLayout}>\n            <Input type=\"file\" name=\"file\" onChange={handleFileChange} />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            labelCol={{ span: 5 }}\n            label=\"Select Tags\"\n            name=\"tags\"\n            rules={[{ required: true, message: 'Please add tags!' }]}\n          >\n            <Select\n              mode=\"multiple\"\n              size={'middle'}\n              showArrow\n              filterOption={(value, option) => option?.children.includes(value)}\n            >\n              {allTags?.map((item, idx) => (\n                <Option key={item.tagName} value={idx}>\n                  {item.verboseName}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            labelCol={{ span: 5 }}\n            label=\"Expiration Date\"\n            name=\"validDate\"\n            rules={[{ required: true, message: 'Please add expiration date!' }]}\n          >\n            <Input type=\"date\" />\n          </Form.Item>\n          <Form.Item label=\"Notice Type\" name=\"type\" labelCol={{ span: 5 }}>\n            <Radio.Group defaultValue={'notice'}>\n              <Radio.Button value=\"notice\">Notice</Radio.Button>\n              <Radio.Button value=\"exam\">Exam</Radio.Button>\n              <Radio.Button value=\"assignment\">Assignment</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n\n          <Button type=\"primary\" htmlType=\"submit\">\n            Upload Notice\n          </Button>\n        </Col>\n      </Form>\n    </Col>\n  );\n};\n\nconst formItemLayout = {\n  labelCol: { span: 3 },\n  wrapperCol: { span: 19 },\n};\n\nexport default AddNotice;\n","import React from 'react';\nimport Background from '../../images/background.png';\nimport Header from '../../reusables/Header';\nimport AddNotice from './AddNotice/AddNotice';\n\nconst NoticeDashboard = () => {\n  return (\n    <div\n      style={{\n        height: '100%',\n        backgroundImage: `url(${Background})`,\n      }}\n    >\n      <Header />\n      <AddNotice />\n    </div>\n  );\n};\n\nexport default NoticeDashboard;\n","import { DeleteOutlined } from '@ant-design/icons';\nimport { Col, Popconfirm, Table, Tag, Typography } from 'antd';\nimport axios from 'axios';\nimport Moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport Background from '../../images/background.png';\nimport { TagsType } from '../../redux/types';\nimport Header from '../../reusables/Header';\n\nconst { Text } = Typography;\n\nconst PastNotices = () => {\n  // const [notices, setNotices] = useState<null | any[]>(null);\n  const [{ listData, loading }, setListData] = useState<{\n    listData: any[];\n    loading: boolean;\n  }>({\n    listData: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await axios.get('notice/getnotices');\n        console.log(res, 'data');\n        setListData({ listData: res.data, loading: false });\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, []);\n\n  const handleDelete = async id => {\n    try {\n      const { data } = await axios.post('notice/delete', {\n        noticeId: id,\n      });\n\n      setListData({ listData: data, loading: false }); // Set updated list from backend\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const columns = [\n    {\n      title: 'Title',\n      dataIndex: 'title',\n    },\n    {\n      title: 'Upload Date',\n      dataIndex: 'date',\n      render: date => <Text>{Moment(date).format('DD/MM/YY LT')}</Text>,\n    },\n    {\n      title: 'Expiry Date',\n      dataIndex: 'validDate',\n      render: date => <Text>{Moment(date).format('DD/MM/YY LT')}</Text>,\n    },\n    {\n      title: 'Tags',\n      dataIndex: 'tags',\n      render: (tags: TagsType) => (\n        <>\n          {tags?.map(tag => {\n            return (\n              <Tag color={'geekblue'} key={tag.tagName}>\n                {tag.verboseName}\n              </Tag>\n            );\n          })}\n        </>\n      ),\n    },\n    {\n      title: 'Action',\n      render: (text, record) => (\n        <Popconfirm\n          title=\"Sure to delete?\"\n          onConfirm={() => handleDelete(record._id)}\n        >\n          <DeleteOutlined style={{ color: 'red' }} />\n        </Popconfirm>\n      ),\n    },\n  ];\n\n  return (\n    <div\n      style={{\n        height: '100vh',\n        backgroundImage: `url(${Background})`,\n      }}\n    >\n      <Header />\n      <Col\n        span={24}\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Col span={24} style={{ padding: 30 }}>\n          <Table\n            loading={loading}\n            pagination={{ pageSize: 6 }}\n            columns={columns}\n            dataSource={listData}\n            style={styles.table}\n          />\n        </Col>\n      </Col>\n    </div>\n  );\n};\n\nconst styles = {\n  header: {\n    backgroundColor: '#ffffff90',\n    borderBottom: '1px solid #ddd',\n    paddingLeft: 30,\n    paddingRight: 30,\n  },\n\n  table: {\n    border: '1px solid #ddd',\n    margin: '16px',\n    backgroundColor: '#fff',\n    padding: '8px',\n    borderRadius: '8px',\n  },\n};\n\nexport default PastNotices;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../redux';\nimport { useDidUpdate } from '../reusables/hooks/useDidUpdate';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nconst GlobalListener = withRouter(({ history }) => {\n  const teacher = useSelector((state: AppState) => state.rootStore.teacher);\n\n  useDidUpdate(() => {\n    // If store is reset due to token expiry\n    if (!teacher) {\n      localStorage.removeItem('teacher-token');\n      axios.defaults.headers.common['Authorization'] = '';\n\n      alert('Session expired, Log In again to continue');\n\n      history.replace('auth');\n    }\n  }, [teacher]);\n  return <></>;\n});\n\nexport default GlobalListener;\n","import { useEffect, useRef } from 'react';\n\n// Dont execute on first render just like component did update\nexport const useDidUpdate: any = (func, deps, didUpdate = true) => {\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didUpdate) {\n      if (didMount.current) {\n        func();\n      } else {\n        didMount.current = true;\n      }\n    } else {\n      func();\n    }\n  }, deps);\n};\n","import axios from 'axios';\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport InitScreen from './components/InitScreen/InitScreen';\nimport useInit from './components/InitScreen/useInit';\nimport Auth from './components/Login/Auth';\nimport NoticeDashboard from './components/NoticeDashboard/NoticeDashboard';\nimport PastNotices from './components/PastNotices/PastNotices';\nimport { baseUrl } from './reusables/contants';\nimport GlobalListener from './components/GlobalListerner';\n\naxios.defaults.baseURL = baseUrl;\n\nconst Routes = () => {\n  useInit();\n\n  return (\n    <BrowserRouter basename=\"/dashboard\">\n      <GlobalListener />\n      <Switch>\n        <Route exact path=\"/\">\n          <InitScreen />\n        </Route>\n        <Route exact path=\"/notices\">\n          <PastNotices />\n        </Route>\n        <Route exact path=\"/auth\">\n          <Auth />\n        </Route>\n        <Route exact path=\"/add-notice\">\n          <NoticeDashboard />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","export const baseUrl =\n  !process.env.NODE_ENV || process.env.NODE_ENV === 'development'\n    ? 'http://localhost:8080/'\n    // : 'https://eanbackend.herokuapp.com/';\n    :  'http://139.59.3.160/api/';\n","import 'antd/dist/antd.css';\nimport axios from 'axios';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux';\nimport { RESET } from './redux/types';\nimport Routes from './Routes';\n\naxios.interceptors.response.use(\n  response => {\n    return response;\n  },\n  err => {\n    const { dispatch } = store;\n    if (err.response) {\n      const { status } = err.response;\n      if (status === 403) {\n        dispatch({ type: RESET });\n      }\n\n      if (status === 500) {\n        alert('Server Error');\n      }\n    } else {\n      // Network error\n      alert('Server or Network Error');\n    }\n\n    return Promise.reject(err);\n  },\n);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.35ebe6ad.png\";"],"sourceRoot":""}